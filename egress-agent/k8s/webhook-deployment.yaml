apiVersion: apps/v1
kind: Deployment
metadata:
  name: egress-webhook
  labels:
    app: egress-webhook
spec:
  replicas: 2
  selector:
    matchLabels:
      app: egress-webhook
  template:
    metadata:
      labels:
        app: egress-webhook
    spec:
      serviceAccountName: egress-agent
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: webhook
        image: egress-webhook:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8443
          name: webhook
        env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: WEBHOOK_PORT
          value: "8443"
        - name: TLS_CERT_FILE
          value: "/etc/certs/tls.crt"
        - name: TLS_KEY_FILE
          value: "/etc/certs/tls.key"
        volumeMounts:
        - name: certs
          mountPath: /etc/certs
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: certs
        secret:
          secretName: webhook-certs
---
apiVersion: v1
kind: Service
metadata:
  name: egress-webhook
  labels:
    app: egress-webhook
spec:
  ports:
  - port: 443
    targetPort: 8443
    name: webhook
  selector:
    app: egress-webhook
